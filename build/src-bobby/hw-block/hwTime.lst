   1               		.file	"hwTime.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	getHWTime
  14               	getHWTime:
  15               	.LFB5:
  16               		.file 1 "/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c"
   1:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** #include <util/atomic.h>
   2:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** #include <avr/io.h>
   3:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** #include <avr/interrupt.h>
   4:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** #include "../hw-api/hwTime.h"
   5:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** #include "../system/hardwaretime.h"
   6:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
   7:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** uint16_t timeHi;			// semi-private data, do not modify outside of this file
   8:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
   9:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** Time getHWTime()
  10:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** {
  17               		.loc 1 10 0
  18               		.cfi_startproc
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 4
  22               		.cfi_offset 16, -3
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 5
  26               		.cfi_offset 17, -4
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31               	.LVL0:
  32               	.LBB11:
  33               	.LBB12:
  34               	.LBB13:
  35               		.file 2 "/usr/lib/avr/include/util/atomic.h"
   1:/usr/lib/avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/lib/avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/lib/avr/include/util/atomic.h **** 
   4:/usr/lib/avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/avr/include/util/atomic.h **** 
   7:/usr/lib/avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/avr/include/util/atomic.h **** 
  10:/usr/lib/avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/lib/avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/lib/avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/lib/avr/include/util/atomic.h ****      distribution.
  14:/usr/lib/avr/include/util/atomic.h **** 
  15:/usr/lib/avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/lib/avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/lib/avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/lib/avr/include/util/atomic.h **** 
  19:/usr/lib/avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/lib/avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/lib/avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/lib/avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/lib/avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/lib/avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/lib/avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/lib/avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/lib/avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/lib/avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/lib/avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/lib/avr/include/util/atomic.h **** */
  31:/usr/lib/avr/include/util/atomic.h **** 
  32:/usr/lib/avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/lib/avr/include/util/atomic.h **** 
  34:/usr/lib/avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/lib/avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/lib/avr/include/util/atomic.h **** 
  37:/usr/lib/avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/lib/avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/lib/avr/include/util/atomic.h **** 
  40:/usr/lib/avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/lib/avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/lib/avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/lib/avr/include/util/atomic.h **** {
  44:/usr/lib/avr/include/util/atomic.h ****     sei();
  45:/usr/lib/avr/include/util/atomic.h ****     return 1;
  46:/usr/lib/avr/include/util/atomic.h **** }
  47:/usr/lib/avr/include/util/atomic.h **** 
  48:/usr/lib/avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  49:/usr/lib/avr/include/util/atomic.h **** {
  50:/usr/lib/avr/include/util/atomic.h ****     cli();
  36               		.loc 2 50 0
  37               	/* #APP */
  38               	 ;  50 "/usr/lib/avr/include/util/atomic.h" 1
  39 0004 F894      		cli
  40               	 ;  0 "" 2
  41               	.LVL1:
  42               	/* #NOAPP */
  43               	.LBE13:
  44               	.LBE12:
  11:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	Time tmp;
  12:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	// prevents ISRs from corrupting multibyte write
  13:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	ATOMIC_BLOCK(ATOMIC_FORCEON)
  14:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c ****     {
  15:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 		tmp = (((Time)timeHi) << 16) | RTC.CNT;
  45               		.loc 1 15 0
  46 0006 E0E0      		ldi r30,0
  47 0008 F4E0      		ldi r31,lo8(4)
  48 000a 0085      		ldd r16,Z+8
  49 000c 1185      		ldd r17,Z+9
  50 000e 6091 0000 		lds r22,timeHi
  51 0012 7091 0000 		lds r23,timeHi+1
  52 0016 CB01      		movw r24,r22
  53 0018 A0E0      		ldi r26,0
  54 001a B0E0      		ldi r27,0
  55 001c 7727      		clr r23
  56 001e 6627      		clr r22
  57 0020 20E0      		ldi r18,0
  58 0022 30E0      		ldi r19,0
  59 0024 602B      		or r22,r16
  60 0026 712B      		or r23,r17
  61 0028 822B      		or r24,r18
  62 002a 932B      		or r25,r19
  63               	.LVL2:
  64               	.LBB14:
  65               	.LBB15:
  51:/usr/lib/avr/include/util/atomic.h ****     return 1;
  52:/usr/lib/avr/include/util/atomic.h **** }
  53:/usr/lib/avr/include/util/atomic.h **** 
  54:/usr/lib/avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/lib/avr/include/util/atomic.h **** {
  56:/usr/lib/avr/include/util/atomic.h ****     sei();
  66               		.loc 2 56 0
  67               	/* #APP */
  68               	 ;  56 "/usr/lib/avr/include/util/atomic.h" 1
  69 002c 7894      		sei
  70               	 ;  0 "" 2
  57:/usr/lib/avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  71               		.loc 2 57 0
  72               	/* epilogue start */
  73               	/* #NOAPP */
  74               	.LBE15:
  75               	.LBE14:
  76               	.LBE11:
  16:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	}
  17:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	
  18:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	return tmp;
  19:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  77               		.loc 1 19 0
  78 002e 1F91      		pop r17
  79 0030 0F91      		pop r16
  80 0032 0895      		ret
  81               		.cfi_endproc
  82               	.LFE5:
  84               	.global	initClock
  86               	initClock:
  87               	.LFB6:
  20:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  21:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** void initClock(void)
  22:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** {
  88               		.loc 1 22 0
  89               		.cfi_startproc
  90               	/* prologue: function */
  91               	/* frame size = 0 */
  92               	/* stack size = 0 */
  93               	.L__stack_usage = 0
  23:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	OSC.CTRL |= _BV(OSC_RC32MEN_bp);			// turn on 32MHz internal RC oscillator
  94               		.loc 1 23 0
  95 0034 8091 5000 		lds r24,80
  96 0038 8260      		ori r24,lo8(2)
  97 003a 8093 5000 		sts 80,r24
  98               	.L4:
  24:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	while(!(OSC.STATUS & OSC_RC32MRDY_bm));  	// wait for it to be ready
  99               		.loc 1 24 0 discriminator 1
 100 003e 8091 5100 		lds r24,81
 101 0042 81FF      		sbrs r24,1
 102 0044 00C0      		rjmp .L4
  25:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  26:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CCP=0xD8;							// allow modification of protected register
 103               		.loc 1 26 0
 104 0046 88ED      		ldi r24,lo8(-40)
 105 0048 84BF      		out __CCP__,r24
  27:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;	// change from 2MHz to 32MHz
 106               		.loc 1 27 0
 107 004a 81E0      		ldi r24,lo8(1)
 108 004c 8093 4000 		sts 64,r24
 109 0050 0895      		ret
 110               		.cfi_endproc
 111               	.LFE6:
 113               	.global	initRTC
 115               	initRTC:
 116               	.LFB7:
  28:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  29:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  30:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** void initRTC(void)
  31:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** {
 117               		.loc 1 31 0
 118               		.cfi_startproc
 119               	/* prologue: function */
 120               	/* frame size = 0 */
 121               	/* stack size = 0 */
 122               	.L__stack_usage = 0
  32:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.CTRL = RTC_PRESCALER_DIV1_gc;
 123               		.loc 1 32 0
 124 0052 E0E0      		ldi r30,0
 125 0054 F4E0      		ldi r31,lo8(4)
 126 0056 81E0      		ldi r24,lo8(1)
 127 0058 8083      		st Z,r24
  33:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.RTCCTRL = CLK_RTCSRC_ULP_gc | CLK_RTCEN_bm; 
 128               		.loc 1 33 0
 129 005a A0E4      		ldi r26,lo8(64)
 130 005c B0E0      		ldi r27,0
 131 005e 1396      		adiw r26,3
 132 0060 8C93      		st X,r24
  34:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  35:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.INTCTRL = RTC_OVFINTLVL_HI_gc;
 133               		.loc 1 35 0
 134 0062 83E0      		ldi r24,lo8(3)
 135 0064 8283      		std Z+2,r24
 136 0066 0895      		ret
 137               		.cfi_endproc
 138               	.LFE7:
 140               	.global	initHWTime
 142               	initHWTime:
 143               	.LFB8:
  36:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  37:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  38:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** void initHWTime()
  39:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** {
 144               		.loc 1 39 0
 145               		.cfi_startproc
 146               	/* prologue: function */
 147               	/* frame size = 0 */
 148               	/* stack size = 0 */
 149               	.L__stack_usage = 0
 150               	.LBB16:
 151               	.LBB17:
  23:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	OSC.CTRL |= _BV(OSC_RC32MEN_bp);			// turn on 32MHz internal RC oscillator
 152               		.loc 1 23 0
 153 0068 8091 5000 		lds r24,80
 154 006c 8260      		ori r24,lo8(2)
 155 006e 8093 5000 		sts 80,r24
 156               	.L9:
  24:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	while(!(OSC.STATUS & OSC_RC32MRDY_bm));  	// wait for it to be ready
 157               		.loc 1 24 0
 158 0072 8091 5100 		lds r24,81
 159 0076 81FF      		sbrs r24,1
 160 0078 00C0      		rjmp .L9
  26:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CCP=0xD8;							// allow modification of protected register
 161               		.loc 1 26 0
 162 007a 88ED      		ldi r24,lo8(-40)
 163 007c 84BF      		out __CCP__,r24
  27:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;	// change from 2MHz to 32MHz
 164               		.loc 1 27 0
 165 007e 81E0      		ldi r24,lo8(1)
 166 0080 8093 4000 		sts 64,r24
 167               	.LBE17:
 168               	.LBE16:
 169               	.LBB18:
 170               	.LBB19:
  32:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.CTRL = RTC_PRESCALER_DIV1_gc;
 171               		.loc 1 32 0
 172 0084 8093 0004 		sts 1024,r24
  33:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.RTCCTRL = CLK_RTCSRC_ULP_gc | CLK_RTCEN_bm; 
 173               		.loc 1 33 0
 174 0088 8093 4300 		sts 67,r24
  35:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.INTCTRL = RTC_OVFINTLVL_HI_gc;
 175               		.loc 1 35 0
 176 008c 83E0      		ldi r24,lo8(3)
 177 008e 8093 0204 		sts 1026,r24
 178 0092 0895      		ret
 179               	.LBE19:
 180               	.LBE18:
 181               		.cfi_endproc
 182               	.LFE8:
 184               	.global	__vector_10
 186               	__vector_10:
 187               	.LFB9:
  40:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	initClock();
  41:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	initRTC();
  42:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  43:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  44:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** ISR(RTC_OVF_vect)
  45:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** {
 188               		.loc 1 45 0
 189               		.cfi_startproc
 190 0094 1F92      		push r1
 191               	.LCFI2:
 192               		.cfi_def_cfa_offset 4
 193               		.cfi_offset 1, -3
 194 0096 0F92      		push r0
 195               	.LCFI3:
 196               		.cfi_def_cfa_offset 5
 197               		.cfi_offset 0, -4
 198 0098 0FB6      		in r0,__SREG__
 199 009a 0F92      		push r0
 200 009c 1124      		clr __zero_reg__
 201 009e 8F93      		push r24
 202               	.LCFI4:
 203               		.cfi_def_cfa_offset 6
 204               		.cfi_offset 24, -5
 205 00a0 9F93      		push r25
 206               	.LCFI5:
 207               		.cfi_def_cfa_offset 7
 208               		.cfi_offset 25, -6
 209               	/* prologue: Signal */
 210               	/* frame size = 0 */
 211               	/* stack size = 5 */
 212               	.L__stack_usage = 5
  46:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** 	timeHi++;
 213               		.loc 1 46 0
 214 00a2 8091 0000 		lds r24,timeHi
 215 00a6 9091 0000 		lds r25,timeHi+1
 216 00aa 0196      		adiw r24,1
 217 00ac 8093 0000 		sts timeHi,r24
 218 00b0 9093 0000 		sts timeHi+1,r25
 219               	/* epilogue start */
  47:/home/pthalamy/CMU/bench/benchmark/build/src-bobby/hw-block/hwTime.c **** }
 220               		.loc 1 47 0
 221 00b4 9F91      		pop r25
 222 00b6 8F91      		pop r24
 223 00b8 0F90      		pop r0
 224 00ba 0FBE      		out __SREG__,r0
 225 00bc 0F90      		pop r0
 226 00be 1F90      		pop r1
 227 00c0 1895      		reti
 228               		.cfi_endproc
 229               	.LFE9:
 231               		.comm	timeHi,2,1
 232               	.Letext0:
 233               		.file 3 "/usr/lib/avr/include/stdint.h"
 234               		.file 4 "/usr/lib/avr/include/avr/iox256a3.h"
 235               		.file 5 "/home/pthalamy/CMU/bench/benchmark/build/src-bobby/system/hardwaretime.bbh"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hwTime.c
     /tmp/ccyhYhxG.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccyhYhxG.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccyhYhxG.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccyhYhxG.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccyhYhxG.s:6      *ABS*:0000000000000034 __CCP__
     /tmp/ccyhYhxG.s:7      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccyhYhxG.s:8      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccyhYhxG.s:14     .text:0000000000000000 getHWTime
                            *COM*:0000000000000002 timeHi
     /tmp/ccyhYhxG.s:86     .text:0000000000000034 initClock
     /tmp/ccyhYhxG.s:115    .text:0000000000000052 initRTC
     /tmp/ccyhYhxG.s:142    .text:0000000000000068 initHWTime
     /tmp/ccyhYhxG.s:186    .text:0000000000000094 __vector_10

UNDEFINED SYMBOLS
__do_clear_bss
