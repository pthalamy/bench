   1               		.file	"hwTime.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__CCP__ = 0x34
   7               	__tmp_reg__ = 0
   8               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  11               		.cfi_sections	.debug_frame
  12               	.global	getHWTime
  14               	getHWTime:
  15               	.LFB5:
  16               		.file 1 "/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c"
   1:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** #include <util/atomic.h>
   2:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** #include <avr/io.h>
   3:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** #include <avr/interrupt.h>
   4:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** #include "../hw-api/hwTime.h"
   5:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** #include "../system/hardwaretime.h"
   6:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
   7:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** uint16_t timeHi;			// semi-private data, do not modify outside of this file
   8:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
   9:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** Time getHWTime()
  10:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** {
  17               		.loc 1 10 0
  18               		.cfi_startproc
  19 0000 0F93      		push r16
  20               	.LCFI0:
  21               		.cfi_def_cfa_offset 4
  22               		.cfi_offset 16, -3
  23 0002 1F93      		push r17
  24               	.LCFI1:
  25               		.cfi_def_cfa_offset 5
  26               		.cfi_offset 17, -4
  27               	/* prologue: function */
  28               	/* frame size = 0 */
  29               	/* stack size = 2 */
  30               	.L__stack_usage = 2
  31               	.LVL0:
  32               	.LBB11:
  33               	.LBB12:
  34               	.LBB13:
  35               		.file 2 "/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h"
   1:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** /* Copyright (c) 2007 Dean Camera
   2:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****    All rights reserved.
   3:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
   4:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
   7:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  10:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****    * Redistributions in binary form must reproduce the above copyright
  11:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****      notice, this list of conditions and the following disclaimer in
  12:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****      the documentation and/or other materials provided with the
  13:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****      distribution.
  14:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  15:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****    * Neither the name of the copyright holders nor the names of
  16:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****      contributors may be used to endorse or promote products derived
  17:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****      from this software without specific prior written permission.
  18:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  19:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  20:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  21:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  22:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  23:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  24:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  25:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  26:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  27:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  28:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  29:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****   POSSIBILITY OF SUCH DAMAGE.
  30:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** */
  31:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  32:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** /* $Id: atomic.h 2158 2010-06-10 15:48:28Z joerg_wunsch $ */
  33:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  34:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** #ifndef _UTIL_ATOMIC_H_
  35:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** #define _UTIL_ATOMIC_H_ 1
  36:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  37:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** #include <avr/io.h>
  38:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** #include <avr/interrupt.h>
  39:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  40:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** #if !defined(__DOXYGEN__)
  41:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** /* Internal helper functions. */
  42:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iSeiRetVal(void)
  43:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** {
  44:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****     sei();
  45:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****     return 1;
  46:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** }
  47:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  48:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** static __inline__ uint8_t __iCliRetVal(void)
  49:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** {
  50:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****     cli();
  36               		.loc 2 50 0
  37               	/* #APP */
  38               	 ;  50 "/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h" 1
  39 0004 F894      		cli
  40               	 ;  0 "" 2
  41               	.LVL1:
  42               	/* #NOAPP */
  43               	.LBE13:
  44               	.LBE12:
  11:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	Time tmp;
  12:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	// prevents ISRs from corrupting multibyte write
  13:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	ATOMIC_BLOCK(ATOMIC_FORCEON)
  14:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c ****     {
  15:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 		tmp = (((Time)timeHi) << 16) | RTC.CNT;
  45               		.loc 1 15 0
  46 0006 E0E0      		ldi r30,0
  47 0008 F4E0      		ldi r31,lo8(4)
  48 000a 8085      		ldd r24,Z+8
  49 000c 9185      		ldd r25,Z+9
  50 000e 0091 0000 		lds r16,timeHi
  51 0012 1091 0000 		lds r17,timeHi+1
  52 0016 20E0      		ldi r18,0
  53 0018 30E0      		ldi r19,0
  54 001a 9801      		movw r18,r16
  55 001c 1127      		clr r17
  56 001e 0027      		clr r16
  57 0020 A0E0      		ldi r26,0
  58 0022 B0E0      		ldi r27,0
  59 0024 082B      		or r16,r24
  60 0026 192B      		or r17,r25
  61 0028 2A2B      		or r18,r26
  62 002a 3B2B      		or r19,r27
  63               	.LVL2:
  64               	.LBB14:
  65               	.LBB15:
  51:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****     return 1;
  52:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** }
  53:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** 
  54:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** static __inline__ void __iSeiParam(const uint8_t *__s)
  55:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h **** {
  56:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****     sei();
  66               		.loc 2 56 0
  67               	/* #APP */
  68               	 ;  56 "/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h" 1
  69 002c 7894      		sei
  70               	 ;  0 "" 2
  57:/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/util/atomic.h ****     __asm__ volatile ("" ::: "memory");
  71               		.loc 2 57 0
  72               	/* #NOAPP */
  73               	.LBE15:
  74               	.LBE14:
  75               	.LBE11:
  16:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	}
  17:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	
  18:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	return tmp;
  19:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  76               		.loc 1 19 0
  77 002e B801      		movw r22,r16
  78 0030 C901      		movw r24,r18
  79               	/* epilogue start */
  80 0032 1F91      		pop r17
  81 0034 0F91      		pop r16
  82               	.LVL3:
  83 0036 0895      		ret
  84               		.cfi_endproc
  85               	.LFE5:
  87               	.global	initClock
  89               	initClock:
  90               	.LFB6:
  20:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  21:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** void initClock(void)
  22:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** {
  91               		.loc 1 22 0
  92               		.cfi_startproc
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  23:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	OSC.CTRL |= _BV(OSC_RC32MEN_bp);			// turn on 32MHz internal RC oscillator
  97               		.loc 1 23 0
  98 0038 8091 5000 		lds r24,80
  99 003c 8260      		ori r24,lo8(2)
 100 003e 8093 5000 		sts 80,r24
 101               	.L3:
  24:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	while(!(OSC.STATUS & OSC_RC32MRDY_bm));  	// wait for it to be ready
 102               		.loc 1 24 0 discriminator 1
 103 0042 8091 5100 		lds r24,81
 104 0046 81FF      		sbrs r24,1
 105 0048 00C0      		rjmp .L3
  25:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  26:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CCP=0xD8;							// allow modification of protected register
 106               		.loc 1 26 0
 107 004a 88ED      		ldi r24,lo8(-40)
 108 004c 84BF      		out __CCP__,r24
  27:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;	// change from 2MHz to 32MHz
 109               		.loc 1 27 0
 110 004e 81E0      		ldi r24,lo8(1)
 111 0050 8093 4000 		sts 64,r24
 112 0054 0895      		ret
 113               		.cfi_endproc
 114               	.LFE6:
 116               	.global	initRTC
 118               	initRTC:
 119               	.LFB7:
  28:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  29:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  30:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** void initRTC(void)
  31:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** {
 120               		.loc 1 31 0
 121               		.cfi_startproc
 122               	/* prologue: function */
 123               	/* frame size = 0 */
 124               	/* stack size = 0 */
 125               	.L__stack_usage = 0
  32:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.CTRL = RTC_PRESCALER_DIV1_gc;
 126               		.loc 1 32 0
 127 0056 E0E0      		ldi r30,0
 128 0058 F4E0      		ldi r31,lo8(4)
 129 005a 81E0      		ldi r24,lo8(1)
 130 005c 8083      		st Z,r24
  33:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.RTCCTRL = CLK_RTCSRC_ULP_gc | CLK_RTCEN_bm; 
 131               		.loc 1 33 0
 132 005e A0E4      		ldi r26,lo8(64)
 133 0060 B0E0      		ldi r27,0
 134 0062 1396      		adiw r26,3
 135 0064 8C93      		st X,r24
  34:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  35:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.INTCTRL = RTC_OVFINTLVL_HI_gc;
 136               		.loc 1 35 0
 137 0066 83E0      		ldi r24,lo8(3)
 138 0068 8283      		std Z+2,r24
 139 006a 0895      		ret
 140               		.cfi_endproc
 141               	.LFE7:
 143               	.global	initHWTime
 145               	initHWTime:
 146               	.LFB8:
  36:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  37:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  38:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** void initHWTime()
  39:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** {
 147               		.loc 1 39 0
 148               		.cfi_startproc
 149               	/* prologue: function */
 150               	/* frame size = 0 */
 151               	/* stack size = 0 */
 152               	.L__stack_usage = 0
 153               	.LBB16:
 154               	.LBB17:
  23:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	OSC.CTRL |= _BV(OSC_RC32MEN_bp);			// turn on 32MHz internal RC oscillator
 155               		.loc 1 23 0
 156 006c 8091 5000 		lds r24,80
 157 0070 8260      		ori r24,lo8(2)
 158 0072 8093 5000 		sts 80,r24
 159               	.L11:
  24:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	while(!(OSC.STATUS & OSC_RC32MRDY_bm));  	// wait for it to be ready
 160               		.loc 1 24 0
 161 0076 8091 5100 		lds r24,81
 162 007a 81FF      		sbrs r24,1
 163 007c 00C0      		rjmp .L11
  26:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CCP=0xD8;							// allow modification of protected register
 164               		.loc 1 26 0
 165 007e 88ED      		ldi r24,lo8(-40)
 166 0080 84BF      		out __CCP__,r24
  27:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;	// change from 2MHz to 32MHz
 167               		.loc 1 27 0
 168 0082 81E0      		ldi r24,lo8(1)
 169 0084 8093 4000 		sts 64,r24
 170               	.LBE17:
 171               	.LBE16:
 172               	.LBB18:
 173               	.LBB19:
  32:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.CTRL = RTC_PRESCALER_DIV1_gc;
 174               		.loc 1 32 0
 175 0088 8093 0004 		sts 1024,r24
  33:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	CLK.RTCCTRL = CLK_RTCSRC_ULP_gc | CLK_RTCEN_bm; 
 176               		.loc 1 33 0
 177 008c 8093 4300 		sts 67,r24
  35:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	RTC.INTCTRL = RTC_OVFINTLVL_HI_gc;
 178               		.loc 1 35 0
 179 0090 83E0      		ldi r24,lo8(3)
 180 0092 8093 0204 		sts 1026,r24
 181 0096 0895      		ret
 182               	.LBE19:
 183               	.LBE18:
 184               		.cfi_endproc
 185               	.LFE8:
 187               	.global	__vector_10
 189               	__vector_10:
 190               	.LFB9:
  40:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	initClock();
  41:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	initRTC();
  42:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** }
  43:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 
  44:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** ISR(RTC_OVF_vect)
  45:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** {
 191               		.loc 1 45 0
 192               		.cfi_startproc
 193 0098 1F92      		push r1
 194               	.LCFI2:
 195               		.cfi_def_cfa_offset 4
 196               		.cfi_offset 1, -3
 197 009a 0F92      		push r0
 198               	.LCFI3:
 199               		.cfi_def_cfa_offset 5
 200               		.cfi_offset 0, -4
 201 009c 0FB6      		in r0,__SREG__
 202 009e 0F92      		push r0
 203 00a0 1124      		clr __zero_reg__
 204 00a2 8F93      		push r24
 205               	.LCFI4:
 206               		.cfi_def_cfa_offset 6
 207               		.cfi_offset 24, -5
 208 00a4 9F93      		push r25
 209               	.LCFI5:
 210               		.cfi_def_cfa_offset 7
 211               		.cfi_offset 25, -6
 212               	/* prologue: Signal */
 213               	/* frame size = 0 */
 214               	/* stack size = 5 */
 215               	.L__stack_usage = 5
  46:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** 	timeHi++;
 216               		.loc 1 46 0
 217 00a6 8091 0000 		lds r24,timeHi
 218 00aa 9091 0000 		lds r25,timeHi+1
 219 00ae 0196      		adiw r24,1
 220 00b0 8093 0000 		sts timeHi,r24
 221 00b4 9093 0000 		sts timeHi+1,r25
 222               	/* epilogue start */
  47:/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/hw-block/hwTime.c **** }
 223               		.loc 1 47 0
 224 00b8 9F91      		pop r25
 225 00ba 8F91      		pop r24
 226 00bc 0F90      		pop r0
 227 00be 0FBE      		out __SREG__,r0
 228 00c0 0F90      		pop r0
 229 00c2 1F90      		pop r1
 230 00c4 1895      		reti
 231               		.cfi_endproc
 232               	.LFE9:
 234               		.comm	timeHi,2,1
 235               	.Letext0:
 236               		.file 3 "/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 237               		.file 4 "/usr/local/Cellar/avr-gcc/4.7.2/lib/gcc/avr/4.7.2/../../../../avr/include/avr/iox256a3.h"
 238               		.file 5 "/Users/pthalamy/Studies/CMU/benchmark/build/src-bobby/system/hardwaretime.bbh"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 hwTime.c
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:4      *ABS*:000000000000003f __SREG__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:6      *ABS*:0000000000000034 __CCP__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:7      *ABS*:0000000000000000 __tmp_reg__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:8      *ABS*:0000000000000001 __zero_reg__
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:14     .text:0000000000000000 getHWTime
                            *COM*:0000000000000002 timeHi
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:89     .text:0000000000000038 initClock
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:118    .text:0000000000000056 initRTC
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:145    .text:000000000000006c initHWTime
/var/folders/15/4vptxgpd5dld1xryx388y8700000gn/T//ccnTy7qH.s:189    .text:0000000000000098 __vector_10

UNDEFINED SYMBOLS
__do_clear_bss
